/*REXX***************************************************************** 00010000
 *                                                                      00020000
 * (C) Copyright IBM Corp. 2000 - All Rights Reserved.                  00030000
 *                                                                      00040000
 * DISCLAIMER OF WARRANTIES.  The following [enclosed] code is sample   00050000
 * code created by IBM Corporation. This sample code is not part of     00060000
 * any standard or IBM product and is provided to you solely for the    00070000
 * purpose of assisting you in the development of your applications.    00080000
 * The code is provided "AS IS", without warranty of any kind.          00090000
 * IBM shall not be liable for any damages arising out of your use of   00100000
 * the sample code,  even if they have been advised of the possibility  00110000
 * of such damages.                                                     00120000
 *                                                                      00130000
 *===================================================================== 00140000
 *                                                                      00150000
 * purpose: initialize usage of the socket API.                         00160000
 *                                                                      00170000
 * parms  : none                                                        00180000
 *                                                                      00190000
 * return : 0 = success                                                 00200000
 *          x = error                                                   00210000
 */                                                                     00220000
                                                                        00230000
parse source os .                                                       00240000
                                                                        00250000
os = translate(left(os, 3))                                             00260000
                                                                        00270000
/* get userID                                                           00280000
 */                                                                     00290000
select                                                                  00300000
   when os = 'CMS' then do                                              00310000
      ADDRESS CMS 'ID (STACK FIFO'                                      00320000
      parse pull uid .                                                  00330000
   end                                                                  00340000
   when os = 'TSO' then do                                              00350000
      uid = SYSVAR('SYSUID')                                            00360000
   end                                                                  00370000
   otherwise do                                                         00380000
      say 'sorry, but your OS is not supported.'                        00390000
      return -1 'initSock' 'Not supported operating system'             00400000
   end                                                                  00410000
end                                                                     00420000
                                                                        00430000
/* check, if there is already an active socket set.                     00440000
 * if so -> terminate it.                                               00450000
 */                                                                     00460000
parse value Socket('SocketSet'),                                        00470000
   with RC desc                                                         00480000
if RC = 0 then do                                                       00490000
   parse value Socket('Terminate', uid),                                00500000
      with RC desc                                                      00510000
   if RC \= 0 then                                                      00520000
      return RC 'initSock-Terminate' desc                               00530000
end                                                                     00540000
                                                                        00550000
/* initialize new socket set.                                           00560000
 */                                                                     00570000
maxSock = 10                                                            00580000
say 'creating SocketSet for' uid 'with max.' maxSock 'sockets.'         00590000
parse value Socket('Initialize', uid, maxSock),                         00600000
   with RC desc                                                         00610000
if RC \= 0 then                                                         00620000
   return RC 'initSock-Initialize' desc                                 00630000
                                                                        00640000
return 0 uid                                                            00650000
